{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/App.vue?cc28","webpack:///./examples/App.vue?663a","webpack:///examples/App.vue","webpack:///./examples/App.vue?853c","webpack:///./examples/App.vue?82c0","webpack:///./packages/cropblg.vue?a088","webpack:///packages/cropblg.vue","webpack:///./packages/cropblg.vue?dc1f","webpack:///./packages/cropblg.vue","webpack:///./packages/index.js","webpack:///./examples/main.js","webpack:///./examples/assets/u=1388650196,3398819234&fm=26&gp=0.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","index","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_2ffb82b8_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","on","click","getImageData","_v","$event","crop","changeImage","directives","rawName","expression","type","placeholder","domProps","input","target","composing","textWatermark","color","staticStyle","width","height","background-color","position","angle","model","callback","$$v","slot","src","text-align","imageData","alt","_e","staticRenderFns","Appvue_type_script_lang_js_","cropAction","methods","uploadImg","e","imgwatermark","imgae","files","changeImg","isimg","_getImageData","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getImage","sent","stop","arguments","examples_Appvue_type_script_lang_js_","component","componentNormalizer","App","cropblgvue_type_template_id_53190108_render","ref","overflow","touchstart","handleStart","touchmove","handleMove","display","justify-content","align-items","flex-wrap","inputHandle","stopPropagation","_t","accept","change","cropblgvue_type_template_id_53190108_staticRenderFns","cropblgvue_type_script_lang_js_","props","noImage","ctx","options","pixelRatio","scale","canvas","image","points","lines","cropper","startPoint","touchBar","nookSide","rotateAngle","animation","img","clientW","clientH","_this$options","currentW","currentH","k","minNum","element","x","y","clientWidth","clientHeight","draw","_this$options2","clearRect","fillBackground","fillImage","averageColor","getImageColor","updatePoint","fillCropper","drawTouchBar","alpha","h1","h2","lineWidth","fillStyle","fillRect","strokeStyle","beginPath","arc","Math","PI","stroke","x1","sin","y1","cos","x2","y2","x0","y0","moveTo","lineTo","fill","canvasRotate","cWidth","cHeight","forecastX","forecastY","diffX","diffY","lineHeight","halfLineHeight","strokeRect","forEach","save","translate","rotate","restore","_this$options3","side","ceil","getNewCropper","touchX","touchY","cropperWidth","cropperHeight","cropperX","cropperY","handlePointMove","_ref","newCropper","_this$getNewCropper","renderCropper","handleLineMove","_ref2","_this$getNewCropper2","objectSpread","handleImageMove","_ref3","offsetX","offsetY","getCoordinateByEvent","rect","getBoundingClientRect","touch","touches","coordinate","clientX","left","clientY","top","_this$options4","preventDefault","startTouches","getPointByCoordinate","getDistance","abs","limit","checkRegion","_ref4","_this","some","point","line","p1","p2","pageX","pageY","sqrt","min","max","_this2","undefined","mimeType","quality","types","Base64","promise_default","a","resolve","toDataURL","Blob","toBlob","blob","w","h","document","createElement","cCtx","getContext","reject","_this2$position","slicedToArray","_this2$position$","_this2$position$2","_this2$position$3","size","_this2$position$4","imageWatermark","watermarkImg","Image","getFileSrc","crossOrigin","onload","imgX","parse_int_default","imgY","font","text","measureText","textX","textY","halfHeight","halfWidth","drawImage","fillText","imgAddress","createImage","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","toString","URL","createObjectURL","imgfile","_this3","getElementById","g","b","num","row","col","round","concat","mounted","mountNode","$refs","canvasDom","style","appendChild","defaultImgUrl","$slots","$emit","packages_cropblgvue_type_script_lang_js_","cropblg_component","cropblg","install","Vue","installed","packages_0","packages_install","vue_runtime_esm","render","$mount"],"mappings":"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","file":"js/index.68f7a0c5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('p',{staticClass:\"operation\"},[_c('button',{on:{\"click\":_vm.getImageData}},[_vm._v(\"点我截图\")]),_c('button',{on:{\"click\":function($event){return _vm.crop.changeImage()}}},[_vm._v(\"点我换图\")])]),_c('p',{staticClass:\"watermark\"},[_vm._v(\"输入水印文字：\\n    \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.textWatermark),expression:\"textWatermark\"}],attrs:{\"type\":\"text\",\"placeholder\":\"可以输入水印\"},domProps:{\"value\":(_vm.textWatermark)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.textWatermark=$event.target.value}}})]),_c('p',{staticClass:\"watermark\"},[_vm._v(\"颜色\\n    \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"type\":\"text\",\"placeholder\":\"16进制颜色\"},domProps:{\"value\":(_vm.color)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.color=$event.target.value}}})]),_c('crop',{staticStyle:{\"width\":\"100%\",\"height\":\"560px\",\"background-color\":\"#f1f3f5\"},attrs:{\"position\":['70%', '70%', 3, 12],\"textWatermark\":_vm.textWatermark,\"angle\":45,\"color\":_vm.color},model:{value:(_vm.crop),callback:function ($$v) {_vm.crop=$$v},expression:\"crop\"}},[_c('template',{slot:\"placeholder\"},[_c('img',{staticStyle:{\"width\":\"20%\"},attrs:{\"src\":\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\"}})]),_c('template',{slot:\"defaultImgUrl\"},[_c('img',{attrs:{\"src\":require(\"./assets/u=1388650196,3398819234&fm=26&gp=0.jpg\")}})])],2),(_vm.cropAction)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('p',[_vm._v(\"长按保存图片\")]),(_vm.cropAction)?_c('img',{staticStyle:{\"width\":\"70%\"},attrs:{\"src\":_vm.imageData,\"alt\":\"\"}}):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n  <p class=\"operation\"><button @click=\"getImageData\">点我截图</button>\r\n  <button @click=\"crop.changeImage()\">点我换图</button></p>\r\n  <p class=\"watermark\">输入水印文字：\r\n      <input type=\"text\" placeholder=\"可以输入水印\" v-model=\"textWatermark\" >      \r\n   </p>\r\n    <p class=\"watermark\">颜色\r\n      <input type=\"text\" placeholder=\"16进制颜色\" v-model=\"color\" >\r\n   </p>\r\n    <crop\r\n      style=\"width:100%;height:560px;background-color: #f1f3f5;\"\r\n      v-model=\"crop\"\r\n      :position=\"['70%', '70%', 3, 12]\"\r\n      :textWatermark = \"textWatermark\"\r\n      :angle=45\r\n      :color=color\r\n    >\r\n          <!-- defaultImgUrl = \"http://img.zcool.cn/community/01bc0f59c9a9b0a8012053f85f066c.jpg\" -->\r\n    <!-- :imageWatermark = \"require('./assets/logo.png')\" -->\r\n      <template slot=\"placeholder\">\r\n        <img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1057851374,249752393&fm=26&gp=0.jpg\" style=\"width:20%\" />\r\n      </template>\r\n\r\n      <template slot=\"defaultImgUrl\"> \r\n        <img  src=\"./assets/u=1388650196,3398819234&fm=26&gp=0.jpg\" />\r\n      </template>\r\n\r\n     </crop>\r\n    <div style=\"text-align:center\" v-if=\"cropAction\">\r\n          <p>长按保存图片</p>\r\n          <img v-if=\"cropAction\" :src=\"imageData\" alt=\"\" style=\"width:70%\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app',\r\n  data() {\r\n    return {\r\n        color:'#f60',\r\n        // imgWatermark: require('、、'),\r\n        textWatermark: '板蓝根出品，必属精品',\r\n        crop:{},\r\n        cropAction: false,\r\n        imageData: null\r\n    }\r\n  },\r\n  methods: {\r\n    uploadImg(e) {\r\n      this.imgwatermark = this.imgae = e.target.files[0]\r\n    },\r\n    changeImg(e) {\r\n      this.isimg = true \r\n      this.imgwatermark  = e.target.files[0]\r\n    },\r\n    async getImageData() {\r\n         const imageData = await this.crop.getImage('Base64', 'image/png', 2)\r\n         this.imageData = imageData\r\n         this.cropAction = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  body,html {\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n  \r\n  }\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  #app {\r\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    width: 100%;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Chrome/Safari/Opera */\r\n    -khtml-user-select: none; /* Konqueror */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently not supported by any browser */\r\n  }\r\n  .operation button {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    background-image: none;\r\n    border: 1px solid transparent;\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.015);\r\n    cursor: pointer;\r\n    -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    height: 32px;\r\n    padding: 0 15px;\r\n    font-size: 14px;\r\n    border-radius: 4px;\r\n     color: #fff;\r\n    background-color: #1890ff;\r\n    border-color: #1890ff;\r\n    text-shadow: 0 -1px 0 rgba(0,0,0,0.12);\r\n    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    box-shadow: 0 2px 0 rgba(0,0,0,0.045);\r\n    line-height: 1.499;\r\n    margin: 20px;\r\n  }\r\n  .watermark input {\r\n    /* -webkit-appearance: none; */\r\n    /* width：180px; */\r\n    position: relative;\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border-radius: 4px;\r\n    border: 1px solid #dcdfe6;\r\n    box-sizing: border-box;\r\n    color: #606266;\r\n    display: inline-block;\r\n    font-size: inherit;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    outline: none;\r\n    padding: 0 15px;\r\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    margin-bottom: 20px;\r\n  }\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2ffb82b8&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mountNode\",staticClass:\"mount-node\",staticStyle:{\"overflow\":\"hidden\"},on:{\"touchstart\":function($event){return _vm.handleStart($event)},\"touchmove\":function($event){return _vm.handleMove($event)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.noImage),expression:\"noImage\"}],staticClass:\"no-image-file\",staticStyle:{\"height\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"flex-wrap\":\"wrap\"},on:{\"click\":_vm.inputHandle,\"touchstart\":function($event){$event.stopPropagation();return (function (){})($event)},\"touchmove\":function($event){$event.stopPropagation();return (function (){})($event)}}},[_vm._t(\"placeholder\",[_c('span',[_vm._v(\"暂时没有图片,请选择图像\")])]),_c('div',{staticStyle:{\"display\":\"none\"}},[_c('input',{attrs:{\"type\":\"file\",\"id\":\"file-input\",\"accept\":\"image/jpeg,image/x-icon,image/png\"},on:{\"change\":_vm.uploadImg}}),_vm._t(\"defaultImgUrl\")],2)],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div ref=\"mountNode\" \r\n        class=\"mount-node\" \r\n        @touchstart=\"handleStart($event)\"\r\n        @touchmove=\"handleMove($event)\"\r\n        style=\" overflow: hidden;\"\r\n    >\r\n    <!--  不能绑在wrap 上=== 这样子任何点击都会计算 -后期优化-->\r\n        <div v-show=\"noImage\" @click=\"inputHandle\" class=\"no-image-file\" style=\"height: 100%; display: flex;justify-content: center;align-items: center;flex-wrap: wrap;\"  @touchstart.stop=\"()=>{}\" @touchmove.stop=\"()=>{}\">\r\n            <!-- <span>暂时没有图片,请选择图像</span> -->\r\n            <slot name=\"placeholder\"><span>暂时没有图片,请选择图像</span></slot>\r\n            <div style=\"display:none\">\r\n                <input \r\n                    @change=\"uploadImg\"\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    accept=\"image/jpeg,image/x-icon,image/png\"\r\n                >\r\n                <slot name=\"defaultImgUrl\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'crop',\r\n        props:['value', 'position', 'textWatermark', 'imageWatermark', 'defaultImgUrl', 'color', 'angle'],\r\n        data() {\r\n            return {\r\n                // ready: false,\r\n                noImage: true,\r\n                ctx: null,\r\n                options: null,\r\n                pixelRatio: null,\r\n                scale:1,\r\n                canvas: null,\r\n                image: {},\r\n                points: [],\r\n                lines: [],\r\n                cropper: {},\r\n                startPoint: {},\r\n                touchBar: {},\r\n                nookSide: 30,\r\n                rotateAngle: 0\r\n            }\r\n        },\r\n        methods: {\r\n            animation(img){\r\n                if (img) {\r\n                    const clientW = img.width,\r\n                    clientH = img.height;\r\n                    const { width, height } = this.options\r\n                    let currentW = clientW,\r\n                        currentH = clientH,\r\n                        k = 1; // contain 时的缩放比\r\n                    // contain 图片\r\n                    if (clientW > width) {\r\n                        currentW = width\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH > height) {\r\n                        currentH = height;\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    // 针对小图片\r\n                    const minNum = 100\r\n                    if (clientW < minNum) {\r\n                        currentW = minNum\r\n                        k = currentW / clientW\r\n                        currentH = k * clientH\r\n                    }\r\n                    if (currentH < minNum) {\r\n                        currentH = minNum;\r\n                        k = currentH / clientH\r\n                        currentW = k * clientW\r\n                    }\r\n                    // 针对小图片\r\n                    this.image = {\r\n                        element: img,\r\n                        width: currentW,\r\n                        height: currentH,\r\n                        x: (width - currentW) / 2,\r\n                        y: (height - currentH) / 2,\r\n                        clientWidth: clientW,\r\n                        clientHeight: clientH\r\n                    }\r\n                    this.cropper = {\r\n                        x: (width - currentW / 2) / 2,\r\n                        y: (height - currentH / 2) / 2,\r\n                        width: currentW  / 2,\r\n                        height: currentH / 2\r\n                    }\r\n                    this.touchBar = {\r\n                        x: width - 60 - 14,\r\n                        y: 10,\r\n                        width: 60,\r\n                        height: 60\r\n                    }\r\n                    this.scale = k\r\n                    this.draw()\r\n                }\r\n            },\r\n            draw() {\r\n                const { width, height } = this.options\r\n                // 避免预览到背景\r\n                this.ctx.clearRect(0, 0, width, height)\r\n                // console.time('fillBackground')  \r\n                this.fillBackground()\r\n                // console.timeEnd('fillBackground')\r\n                // console.time('fillImage')\r\n                this.fillImage()\r\n                if (!this.averageColor) {\r\n                   this.averageColor = this.getImageColor(this.ctx.getImageData(this.cropper.x,  this.cropper.y, 50, 50).data)\r\n                }\r\n                // console.timeEnd('fillImage')\r\n                // console.time('updatePoint')\r\n                this.updatePoint()\r\n                // console.timeEnd('updatePoint')\r\n                //  console.time('fillCropper')\r\n                this.fillCropper()\r\n                // console.timeEnd('fillCropper')\r\n                //  console.time('drawTouchBar')\r\n                 if (this.angle) {\r\n                     this.drawTouchBar()\r\n                 }\r\n                // console.timeEnd('drawTouchBar')\r\n                // this.preview()\r\n            },\r\n            drawTouchBar() {\r\n                const ctx = this.ctx,\r\n                touchBar = this.touchBar,\r\n                color = this.color || this.averageColor,\r\n                x = touchBar.x + touchBar.width * 0.6,\r\n                y =  touchBar.y + touchBar.height * 0.64,\r\n                r = touchBar.width * 0.41,\r\n                alpha = 6,\r\n                h1 = touchBar.width * 0.1,\r\n                h2 =  touchBar.width * 0.18\r\n                ctx.lineWidth = 2\r\n                // ctx.fillStyle = '#000';\r\n                // ctx.fillRect(touchBar.x, touchBar.y, touchBar.width, touchBar.height)\r\n                ctx.fillStyle = color\r\n                ctx.fillRect(x - touchBar.width / 6, y - touchBar.height / 6, touchBar.width * 0.43, touchBar.height * 0.43)\r\n                ctx.strokeStyle = color\r\n                ctx.beginPath()\r\n                ctx.arc(x, y, r, Math.PI/180 * 180, -Math.PI/2 + alpha, false)\r\n                ctx.stroke()\r\n                if(alpha < 2*Math.PI) {\r\n                    const x1 = x + (r - h1) * Math.sin(alpha),\r\n                    y1 = y - (r - h1) * Math.cos(alpha),\r\n                    x2 = x + (r + h1) * Math.sin(alpha),\r\n                    y2 = y - (r + h1) * Math.cos(alpha),\r\n                    x0 = (x1 + x2) / 2 + h2 * Math.sin(alpha + Math.PI/2),\r\n                    y0 = (y1 + y2) / 2 - h2 * Math.cos(alpha + Math.PI/2)\r\n                    ctx.beginPath()\r\n                    ctx.moveTo(x0, y0)\r\n                    ctx.lineTo(x1, y1)\r\n                    ctx.lineTo(x2, y2)\r\n                    ctx.fill()\r\n                }\r\n            },\r\n            fillImage() {\r\n                const image = this.image;\r\n                const ctx = this.ctx\r\n                const rotateAngle = this.rotateAngle || 0\r\n                this.canvasRotate('img', ctx, image.element, rotateAngle, image.x, image.y, image.width, image.height)\r\n                // ctx.drawImage(image.element, image.x, image.y, image.width, image.height)\r\n            },\r\n            updatePoint() {\r\n                // 点中点和线 不用 执行 \r\n                const c = this.cropper;\r\n                const nookSide =  this.nookSide,\r\n                cWidth = c.x + c.width,\r\n                cHeight = c.y + c.height,\r\n                forecastX = cWidth - nookSide,\r\n                forecastY = cHeight - nookSide\r\n                this.points = [\r\n                    {\r\n                        x: c.x,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: c.y,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: 0\r\n                    },\r\n                    {\r\n                        x: forecastX ,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: nookSide,\r\n                        diffY: nookSide\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: forecastY,\r\n                        width:nookSide,\r\n                        height:nookSide,\r\n                        diffX: 0,\r\n                        diffY: nookSide\r\n                    }\r\n                ]\r\n                // 寻找四根线\r\n                const lineHeight = nookSide / .7 / 2,\r\n                halfLineHeight = lineHeight / 2\r\n                this.lines = [\r\n                     {\r\n                        x: c.x,\r\n                        y: c.y - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: cWidth - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    },\r\n                    {\r\n                        x: c.x,\r\n                        y: cHeight - halfLineHeight,\r\n                        width: c.width,\r\n                        height: lineHeight\r\n                    },\r\n                    {\r\n                        x: c.x - halfLineHeight,\r\n                        y: c.y,\r\n                        width: lineHeight,\r\n                        height: c.height\r\n                    }\r\n                ]\r\n            },\r\n            fillCropper() {\r\n                const ctx = this.ctx,\r\n                cropper = this.cropper,\r\n                points = this.points,\r\n                color = this.color || this.averageColor\r\n                ctx.strokeStyle = color\r\n                ctx.lineWidth = 2\r\n                ctx.strokeRect(cropper.x, cropper.y, cropper.width, cropper.height)\r\n                ctx.fillStyle = color\r\n                const nookSide = this.nookSide / 8\r\n                points.forEach((element, index) => {\r\n                    ctx.save()\r\n                    ctx.translate(element.x + element.diffX, element.y + element.diffY)\r\n                    ctx.rotate(index * 90 * (Math.PI/180))\r\n                    ctx.fillRect(-nookSide, -nookSide, element.height, nookSide * 2)\r\n                    ctx.fillRect(-nookSide, -nookSide, nookSide * 2, element.width)\r\n                    // if(index % 2 === 0){\r\n                    //     ctx.fillRect(-nookSide, cropper.height / 2 - element.nookSide , element.nookSide / 4, element.nookSide * 2)\r\n                    // } else {\r\n                    //     ctx.fillRect(-nookSide, cropper.width / 2 - element.nookSide, element.nookSide / 4, element.nookSide * 2)\r\n                    // }\r\n                    ctx.restore()\r\n                });\r\n               \r\n\r\n            },\r\n           // 填充背景\r\n            fillBackground() {\r\n                // 多个变量可以用逗号 一次赋值\r\n                const { width, height } = this.options\r\n                const ctx = this.ctx,\r\n                side = 30 ,//width / 80,\r\n                x = Math.ceil(width / side),\r\n                y = Math.ceil(height / side)\r\n                // Math.ceil 向上取整\r\n                ctx.save()\r\n                ctx.fillStyle = '#ccc'\r\n                // y方向\r\n                for (let i = 0; i < y; i++) {//  铺满每一行\r\n                    for (let j = 0; j < x; j++) { // 一行的小方格\r\n                        if ((j + i) % 2 === 0) {\r\n                            ctx.fillRect(j * side, i * side, side, side)\r\n                        }\r\n                    }\r\n                }\r\n                //蒙层 \r\n                ctx.fillStyle = 'rgba(0, 0, 0, .1)'\r\n                ctx.fillRect(0, 0, width, height)\r\n                 //蒙层 \r\n                ctx.restore()\r\n            },\r\n            getNewCropper(touchX, touchY ,cropper) {\r\n               return {\r\n                    cropperWidth:(cropper.x + cropper.width) - touchX,\r\n                    cropperHeight: (cropper.y + cropper.height) - touchY,\r\n                    cropperX: touchX - cropper.x,\r\n                    cropperY: touchY - cropper.y\r\n               }\r\n            },\r\n            handlePointMove({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 0:\r\n                        newCropper.width =  cropperWidth\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.x = x\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 1:\r\n                    // x  不会动\r\n                        newCropper.width =  cropperX\r\n                        newCropper.height =  cropperHeight\r\n                        newCropper.y = y\r\n                        break;\r\n                    case 3:\r\n                    // y 不会动\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.height = cropperY\r\n                        newCropper.x = x\r\n                        break;\r\n                    case 2:\r\n                        newCropper.width = cropperX\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            handleLineMove ({ x, y }) {\r\n                const cropper = this.cropper,\r\n                newCropper = {},\r\n                { cropperWidth, cropperHeight, cropperX, cropperY } = this.getNewCropper(x, y, cropper)\r\n                switch (this.index) {\r\n                    case 3:\r\n                        newCropper.width = cropperWidth\r\n                        newCropper.x = x // 限制\r\n                        break;\r\n                    case 0:\r\n                        newCropper.height = cropperHeight\r\n                        newCropper.y = y // 限制\r\n                        break;\r\n                    case 1:\r\n                        newCropper.width = cropperX\r\n                        break;\r\n                    case 2:\r\n                    // y 不会动\r\n                        newCropper.height = cropperY\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.renderCropper(newCropper)\r\n            },\r\n            renderCropper(newCropper) {\r\n                 if (newCropper.width <= this.nookSide * 4 || newCropper.height <= this.nookSide * 4) {\r\n                    return\r\n                }\r\n                this.cropper = {...this.cropper,...newCropper}\r\n                this.draw()\r\n            },\r\n            handleImageMove ({ x, y }) {\r\n                const s = this.startPoint\r\n                this.image.x = x - s.offsetX\r\n                this.image.y = y - s.offsetY\r\n                this.draw()\r\n            },\r\n            // handleCropperMove({ x, y }) {\r\n            //     const { width, height } = this.options;\r\n            //     const s = this.startPoint;\r\n            //     const oX = s.offsetX;\r\n            //     const oY = s.offsetY;\r\n            //     const maxX = width - this.cropper.width;\r\n            //     const maxY = height - this.cropper.height;\r\n            //     let currentX = x - oX,\r\n            //     currentY = y - oY;\r\n            //     // 判断边界\r\n            //     this.cropper.x = this.limit(currentX, 0, maxX)\r\n            //     this.cropper.y = this.limit(currentY, 0, maxY)\r\n            //     this.draw()\r\n            // },\r\n            getCoordinateByEvent(e){\r\n                const rect = e.target.getBoundingClientRect(),\r\n                touch = e.touches[0],\r\n                coordinate = {\r\n                    x: touch.clientX - rect.left,\r\n                    y: touch.clientY - rect.top\r\n                },\r\n                { width, height } = this.options\r\n                // move 到边\r\n                if (coordinate.x <= 2 || coordinate.y <= 2 || coordinate.x >= width - 2 || coordinate.y >= height - 2) return\r\n                return coordinate\r\n            },\r\n            // https://blog.csdn.net/qq_42014697/article/details/80728463  两指缩放\r\n            handleStart(e) {\r\n                e.preventDefault()\r\n                if (e.touches.length > 1) {\r\n                    this.startTouches = e.touches\r\n                    this.startPoint.type = null\r\n                    return;\r\n                }\r\n                this.startPoint = this.getPointByCoordinate(this.getCoordinateByEvent(e))\r\n            },\r\n            handleMove (e) {\r\n                e.preventDefault()\r\n                const touches = e.touches\r\n                if (touches.length > 1) {\r\n                    const image = this.image\r\n                    let startTouches = this.startTouches\r\n                    let k; // 最终的缩放系数\r\n                    const scale = this.scale;\r\n                    // const offset = e.deltaY / 800;\r\n                    k = (this.getDistance(touches[0], touches[1]) / this.getDistance(startTouches[0], startTouches[1]))\r\n                    // k = k < 1 ? k / 10 : k * 10\r\n                    k = k < 1 ? 1 / (1 + k / 80) : 1 + Math.abs(k) / 160\r\n                    k = k * scale;\r\n                    this.scale = this.limit(k, 0.02, 4)\r\n                    const width = image.clientWidth * this.scale,\r\n                    height = image.clientHeight * this.scale\r\n                    this.image.x += (image.width - width) / 2\r\n                    this.image.y += (image.height - height) / 2\r\n                    this.image.width = width\r\n                    this.image.height = height\r\n                    this.draw()\r\n                    return\r\n                }\r\n                const type = this.startPoint.type\r\n                if (type && this.getCoordinateByEvent(e)) {\r\n                    this[type](this.getCoordinateByEvent(e))\r\n                }\r\n            },\r\n            checkRegion(x,y,target) {\r\n                return x > target.x &&\r\n                    x < target.x + target.width &&\r\n                    y > target.y &&\r\n                    y < target.y + target.height\r\n            },\r\n            getPointByCoordinate({x, y}) {\r\n                const image = this.image,\r\n                touchBar = this.touchBar\r\n                let t = {}\r\n                let index = 0\r\n                if (this.checkRegion(x,y,touchBar)) {\r\n                    this.rotateAngle =  (this.rotateAngle + this.angle ) % 360\r\n                    this.draw()\r\n                }  \r\n                // 四个角移动         \r\n                else if (this.points.some((point,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,point)\r\n                })\r\n                ) {\r\n                    t.type = 'handlePointMove'\r\n                    this.index = index\r\n                }\r\n                // 四根线移动\r\n                else if (this.lines.some((line,i) => {\r\n                    index = i\r\n                    return this.checkRegion(x,y,line)\r\n                }) \r\n                ) {\r\n                    t.type = 'handleLineMove'\r\n                    this.index = index\r\n                }\r\n                // else if (\r\n                // cropper &&\r\n                // x > cropper.x &&\r\n                // x < cropper.x + cropper.width &&\r\n                // y > cropper.y &&\r\n                // y < cropper.y + cropper.height\r\n                // ) {\r\n                // t.offsetX = x - cropper.x;\r\n                // t.offsetY = y - cropper.y;\r\n                // t.type = 'handleCropperMove'\r\n                // }\r\n                // 图片移动\r\n                else if (this.checkRegion(x,y,image)) {\r\n                    t.offsetX = x - image.x\r\n                    t.offsetY = y - image.y\r\n                    t.type = 'handleImageMove'\r\n                }\r\n                return t\r\n            },\r\n            getDistance(p1, p2) {\r\n                const x = p2.pageX - p1.pageX,\r\n                    y = p2.pageY - p1.pageY\r\n                return Math.sqrt((x * x) + (y * y))\r\n            },\r\n            limit(value, min, max) {\r\n                if (value < min) {\r\n                    return min\r\n                }\r\n                if (value > max) {\r\n                    return max\r\n                }\r\n                return value\r\n            },\r\n            getImage(type='Base64', mimeType='image/jpeg', quality=1) {\r\n                if (this.noImage) return\r\n                const image = this.image,\r\n                cropper = this.cropper,\r\n                pixelRatio = this.pixelRatio,\r\n                types = {\r\n                    Base64(canvas, mimeType) {\r\n                        return new Promise((resolve) => {\r\n                            resolve(canvas.toDataURL(mimeType))\r\n                        })\r\n                    },\r\n                    Blob(canvas, mimeType){\r\n                        return new Promise((resolve) => {\r\n                            canvas.toBlob((blob)=> {\r\n                                resolve(blob)\r\n                            }, mimeType)\r\n                        })\r\n                    } \r\n                },\r\n                w = cropper.width * quality ,\r\n                h = cropper.height * quality \r\n                // 变量申请\r\n                if (!this.canvas) {\r\n                    this.canvas = document.createElement('canvas')\r\n                    this.cCtx = this.canvas.getContext('2d')\r\n                    // const { mountNode } = this.$refs\r\n                    // mountNode.appendChild(this.canvas)\r\n                }\r\n                const cCtx = this.cCtx\r\n                this.canvas.width = w * pixelRatio\r\n                this.canvas.height = h * pixelRatio\r\n                cCtx.scale(pixelRatio, pixelRatio)\r\n                cCtx.clearRect(0, 0, w, h)\r\n                const rotateAngle = this.rotateAngle || 0\r\n                this.canvasRotate('img', cCtx, image.element,\r\n                    rotateAngle,\r\n                    (image.x - cropper.x)  * quality,\r\n                    (image.y - cropper.y)  * quality,\r\n                    image.width* quality,\r\n                    image.height* quality\r\n                )\r\n                // -------------\r\n                // cCtx.drawImage(\r\n                //     image.element,\r\n                //     (image.x - cropper.x)  * quality , //  是负数\r\n                //     (image.y - cropper.y)  * quality, // 负数\r\n                //     image.width * quality ,\r\n                //     image.height * quality\r\n                // )\r\n                return new Promise((resolve, reject) => {\r\n                    if(!types[type]) {\r\n                        reject('type = Blob || Base64')\r\n                        return  \r\n                    }\r\n                    const [left = '50%', top = '50%', size = 1, angle = 0] = this.position\r\n                    // angle = this.angle || 0\r\n                    if (this.imageWatermark) {\r\n                        let watermarkImg = new Image()\r\n                        watermarkImg.src = this.getFileSrc(this.imageWatermark)\r\n                        watermarkImg.crossOrigin = 'anonymous'\r\n                        watermarkImg.onload = () => { // 等到图片加载进来之后\r\n                            const width = watermarkImg.width * size * quality,\r\n                            height = watermarkImg.height * size * quality,\r\n                            imgX  = ( w - width ) * parseInt(left) / 100 ,\r\n                            imgY =  (h - height) * parseInt(top) / 100\r\n                            this.canvasRotate('img', cCtx, watermarkImg, angle, imgX, imgY, width, height)\r\n                            resolve(types[type](this.canvas, mimeType))\r\n                        }\r\n                        return\r\n                    }             \r\n                    if (this.textWatermark) {\r\n                        const height = this.limit(12 * size, 12, 100)\r\n                        cCtx.font = height + 'px Georgia'\r\n                        const text = this.textWatermark,\r\n                        width = cCtx.measureText(text).width,\r\n                        textX = (w - width * 1.031 )  * parseInt(left) / 100,\r\n                        textY = (h - height * 2.82)  * parseInt(top) / 100\r\n                        // 变量申请\r\n                        cCtx.fillStyle = this.color || this.averageColor\r\n                        // console.log(this.cCtx.fillStyle)\r\n                        if(cCtx.fillStyle === '#ffffff') {\r\n                            cCtx.fillStyle = '#000'\r\n                        }\r\n                        this.canvasRotate('text', cCtx, text, angle, textX, textY, width, height)\r\n                        resolve(types[type](this.canvas, mimeType))\r\n                        return\r\n                    }\r\n                    resolve(types[type](this.canvas, mimeType))\r\n                })\r\n            },\r\n            canvasRotate(type, ctx, target, angle, x, y, width,height) {\r\n                ctx.save()\r\n                const halfHeight = height / 2,\r\n                halfWidth = width / 2\r\n                ctx.translate(x + halfWidth, y + halfHeight)\r\n                ctx.rotate(Math.PI / 180 * angle)\r\n                if (type === 'img') {\r\n                    ctx.drawImage(\r\n                        target,\r\n                        -halfWidth,\r\n                        -halfHeight,\r\n                        width,\r\n                        height\r\n                    )\r\n                } else {\r\n                    ctx.fillText(target, -halfWidth , -halfHeight)\r\n                }\r\n                ctx.restore()\r\n            },\r\n            changeImage(imgAddress) {\r\n                if (this.noImage) return\r\n                this.averageColor = null\r\n                if (imgAddress) {\r\n                    this.createImage(imgAddress)\r\n                    return\r\n                }\r\n                this.inputHandle()\r\n            },\r\n            // 工具\r\n            getPixelRatio(context) {\r\n                const backingStore = context.backingStorePixelRatio ||\r\n                context.webkitBackingStorePixelRatio ||\r\n                context.mozBackingStorePixelRatio ||\r\n                context.msBackingStorePixelRatio ||\r\n                context.oBackingStorePixelRatio ||\r\n                context.backingStorePixelRatio || 1\r\n                return (window.devicePixelRatio || 1) / backingStore\r\n            },\r\n            uploadImg(e) {\r\n                this.createImage(e.target.files[0])\r\n                this.noImage = false\r\n            },\r\n            getFileSrc(src) {\r\n                if (Object.prototype.toString.call(src) === '[object File]') {\r\n                   src = window.URL.createObjectURL(src)\r\n                }\r\n                return src\r\n            },\r\n            createImage(imgfile) {\r\n                let img = new Image()\r\n                //  url , imgsrc, 文件  三种情况\r\n                img.crossOrigin = 'anonymous'\r\n                img.src = this.getFileSrc(imgfile)\r\n                img.onload = () => { // 等到图片加载进来之后\r\n                    this.animation(img)\r\n                }\r\n            },\r\n            inputHandle() {\r\n                document.getElementById('file-input').click()\r\n            },\r\n            getImageColor(data) { \r\n                if (this.color) {\r\n                    return this.color\r\n                }\r\n                let r=0, g=0, b=0\r\n                // 取所有像素的平均值\r\n                const num = 50\r\n                for (var row = 0; row < num; row++) {\r\n                    for (var col = 0; col < num; col++) {\r\n                        r += data[((num * row) + col) * 4];\r\n                        g += data[((num * row) + col) * 4 + 1];\r\n                        b += data[((num * row) + col) * 4 + 2];\r\n                    }\r\n                }\r\n                // 求取平均值\r\n                r /= (num * num);\r\n                g /= (num * num);\r\n                b /= (num * num);\r\n                // 将最终的值取整\r\n                r = Math.round(r);\r\n                g = Math.round(g);\r\n                b = Math.round(b);\r\n                return `rgba(${255 - r}, ${255 - g}, ${255 - b}, 1)`\r\n            }\r\n        },\r\n        mounted() {\r\n            // 解决 字体模糊\r\n            const { mountNode } = this.$refs\r\n            const { clientWidth, clientHeight } = mountNode\r\n            // p可以优化\r\n            this.options = {\r\n                width: clientWidth,\r\n                height: clientHeight\r\n            }\r\n            // canvas dom\r\n            let canvasDom =  document.createElement('canvas')\r\n            canvasDom.style.width =  clientWidth + 'px'\r\n            canvasDom.style.height = clientHeight + 'px'\r\n            mountNode.appendChild(canvasDom)\r\n            this.ctx = canvasDom.getContext('2d')\r\n            const pixelRatio = this.pixelRatio = this.getPixelRatio(this.ctx)\r\n            canvasDom.width = clientWidth * pixelRatio\r\n            canvasDom.height = clientHeight * pixelRatio\r\n            this.ctx.scale(pixelRatio, pixelRatio)\r\n            // console.log(this.$slots.initial[0].data.attrs.src)\r\n            if (this.defaultImgUrl || this.$slots.defaultImgUrl) {\r\n                const src = this.defaultImgUrl ? this.defaultImgUrl : this.$slots.defaultImgUrl[0].data.attrs.src\r\n                this.createImage(src)\r\n                this.noImage = false\r\n            }\r\n            this.$emit('input', {\r\n                getImage: this.getImage,\r\n                changeImage: this.changeImage\r\n            })           \r\n        }\r\n    }\r\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./cropblg.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cropblg.vue?vue&type=template&id=53190108&\"\nimport script from \"./cropblg.vue?vue&type=script&lang=js&\"\nexport * from \"./cropblg.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\r\nimport crop from './cropblg.vue';\r\n\r\n// const components = [progresschart];\r\n\r\n// 定义 install 方法\r\nconst install = function (Vue) {\r\n    if (install.installed) return\r\n    install.installed = true\r\n    // 遍历并注册全局组件\r\n    // components.map(component => {\r\n        Vue.component(crop.name, crop)\r\n    // })\r\n}\r\n\r\n//  全局引用可自动安装\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    install(window.Vue);\r\n}\r\nexport default {\r\n    install,\r\n    crop\r\n};\r\nexport { crop };","import Vue from 'vue'\r\nimport App from './App.vue'\r\n// import crop from '../lib/vue-cropblg.umd'\r\nimport crop from '../packages/index'\r\n\r\nVue.use(crop)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App),\r\n}).$mount('#app')\r\n","module.exports = __webpack_public_path__ + \"img/u=1388650196,3398819234&fm=26&gp=0.4bfbd4a3.jpg\";"],"sourceRoot":""}